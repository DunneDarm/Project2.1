/* 
 * HC-SR04
 * trigger to sensor : uno 0 (PD0) output
 * echo from sensor  : uno 3 (PD3 = INT1) input
 */
#include <avr/interrupt.h>

volatile uint32_t gv_counter; // 16 bit counter value
volatile uint8_t gv_echo; // a flag
float centi = 0; //global variable for distance
volatile uint8_t rising;

int DistanceString[20];
int DistanceRead;

void init_ext_int(void)
{
	// any change triggers ext interrupt 1
	EICRA = (1 << ISC10);
	EIMSK = (1 << INT1);
}

void init_timer(void)
{
	TCCR1A = 0;
	TCCR1B = 0;
}

void Send_signal()
{
	PORTD |= (1 << PIND4); //Turn on the pull-up, rising edge
	_delay_us(12); //delay enough for the trigger to receive and comprehend
	PORTD = 0;
	gv_echo = 1;
}

ISR (INT1_vect)
{
	if (gv_echo == 1)
	{	
		TCCR1B |= (1<<CS10) | (0<<CS11) | (1<<CS12);
		TCNT1 = 0;
		//TIMSK0 |= (1<<TOIE0);
		gv_counter = 0;
		gv_echo = 0;
	}
	else{
		TCCR1B = 0;
		centi = TCNT1;
	}
}

int main(void)
{
	init_ext_int();
	init_timer();
	DDRD = 0x16;
	PORTD = 0;
	
	sei(); //turn on interrupts
	while(1)
	{		
		Send_signal();
		_delay_ms(30);
		DistanceRead = ((uint32_t)(centi*1024/16)/58);
		itoa(DistanceRead, DistanceString, 10);
		_delay_ms(500);
		USART_putstring(DistanceString);
		USART_putstring(" ");
	}
}